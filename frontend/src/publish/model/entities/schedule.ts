export default {
  appDEFields: [
    {
      codeName: 'type',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.TYPE',
      },
      logicName: '类型',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 100,
      name: 'TYPE',
      id: 'type',
    },
    {
      codeName: 'owner_id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.OWNER_ID',
      },
      logicName: '所属数据标识',
      predefinedType: 'PARENTID',
      stdDataType: 25,
      stringLength: 100,
      name: 'OWNER_ID',
      id: 'owner_id',
    },
    {
      codeName: 'owner_type',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.OWNER_TYPE',
      },
      logicName: '所属数据对象',
      predefinedType: 'PARENTTYPE',
      stdDataType: 25,
      stringLength: 100,
      name: 'OWNER_TYPE',
      id: 'owner_type',
    },
    {
      codeName: 'owner_subtype',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.OWNER_SUBTYPE',
      },
      logicName: '所属对象子类型',
      predefinedType: 'PARENTSUBTYPE',
      stdDataType: 25,
      stringLength: 100,
      name: 'OWNER_SUBTYPE',
      id: 'owner_subtype',
    },
    {
      codeName: 'is_close',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IS_CLOSE',
      },
      logicName: '是否关闭',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 200,
      name: 'IS_CLOSE',
      id: 'is_close',
    },
    {
      codeName: 'id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.ID',
      },
      logicName: '标识',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 100,
      name: 'ID',
      id: 'id',
    },
    {
      codeName: 'create_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_MAN',
      },
      logicName: '建立人',
      predefinedType: 'CREATEMAN',
      stdDataType: 25,
      stringLength: 100,
      name: 'CREATE_MAN',
      id: 'create_man',
    },
    {
      codeName: 'create_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_TIME',
      },
      logicName: '建立时间',
      predefinedType: 'CREATEDATE',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'CREATE_TIME',
      id: 'create_time',
    },
    {
      codeName: 'name',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.NAME',
      },
      logicName: '名称',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 200,
      enableQuickSearch: true,
      name: 'NAME',
      id: 'name',
    },
    {
      codeName: 'update_man',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_MAN',
      },
      logicName: '更新人',
      predefinedType: 'UPDATEMAN',
      stdDataType: 25,
      stringLength: 100,
      name: 'UPDATE_MAN',
      id: 'update_man',
    },
    {
      codeName: 'update_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.UPDATE_TIME',
      },
      logicName: '更新时间',
      predefinedType: 'UPDATEDATE',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'UPDATE_TIME',
      id: 'update_time',
    },
    {
      codeName: 'end_date_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.END_DATETIME',
      },
      logicName: '结束日期时间',
      predefinedType: 'NONE',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'END_DATETIME',
      id: 'end_date_time',
    },
    {
      codeName: 'start_date_time',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.START_DATETIME',
      },
      logicName: '起始日期时间',
      predefinedType: 'NONE',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'START_DATETIME',
      id: 'start_date_time',
    },
    {
      codeName: 'status',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.STATUS',
      },
      logicName: '状态',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 60,
      name: 'STATUS',
      id: 'status',
    },
    {
      codeName: 'owner',
      logicName: '所有者',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 60,
      name: 'OWNER',
      id: 'owner',
    },
  ],
  appDEMethodDTOs: [
    {
      codeName: 'schedule_dto',
      appDEMethodDTOFields: [
        {
          codeName: 'owner_id',
          logicName: '所属数据标识',
          appDEFieldId: 'owner_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'owner_id',
        },
        {
          codeName: 'type',
          logicName: '类型',
          appDEFieldId: 'type',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'type',
        },
        {
          codeName: 'owner_type',
          logicName: '所属数据对象',
          appDEFieldId: 'owner_type',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'owner_type',
        },
        {
          codeName: 'owner_subtype',
          logicName: '所属对象子类型',
          appDEFieldId: 'owner_subtype',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'owner_subtype',
        },
        {
          codeName: 'is_close',
          logicName: '是否关闭',
          appDEFieldId: 'is_close',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'is_close',
        },
        {
          codeName: 'create_man',
          logicName: '建立人',
          appDEFieldId: 'create_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'create_man',
        },
        {
          codeName: 'create_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '建立时间',
          appDEFieldId: 'create_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          id: 'create_time',
        },
        {
          codeName: 'end_date_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '结束日期时间',
          appDEFieldId: 'end_date_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'end_date_time',
        },
        {
          codeName: 'id',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'id',
        },
        {
          codeName: 'name',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'name',
        },
        {
          codeName: 'owner',
          logicName: '所有者',
          appDEFieldId: 'owner',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'owner',
        },
        {
          codeName: 'start_date_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '起始日期时间',
          appDEFieldId: 'start_date_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'start_date_time',
        },
        {
          codeName: 'status',
          logicName: '状态',
          appDEFieldId: 'status',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'status',
        },
        {
          codeName: 'update_man',
          logicName: '更新人',
          appDEFieldId: 'update_man',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'update_man',
        },
        {
          codeName: 'update_time',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '更新时间',
          appDEFieldId: 'update_time',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          id: 'update_time',
        },
      ],
      sourceType: 'DE',
      type: 'DEFAULT',
      id: 'schedule_dto',
    },
    {
      codeName: 'schedule_filter_dto',
      appDEMethodDTOFields: [
        {
          codeName: 'n_id_eq',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_id_eq',
        },
        {
          codeName: 'n_name_like',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_name_like',
        },
        {
          codeName: 'n_owner_eq',
          logicName: '所有者',
          appDEFieldId: 'owner',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_owner_eq',
        },
        {
          codeName: 'n_owner_id_eq',
          logicName: '所属数据标识',
          appDEFieldId: 'owner_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_owner_id_eq',
        },
        {
          codeName: 'n_status_eq',
          logicName: '状态',
          appDEFieldId: 'status',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_status_eq',
        },
        {
          codeName: 'n_type_eq',
          logicName: '类型',
          appDEFieldId: 'type',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_type_eq',
        },
      ],
      sourceType: 'DE',
      type: 'DEFILTER',
      id: 'schedule_filter_dto',
    },
  ],
  appDEMethods: [
    {
      codeName: 'check_key',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        stdDataType: 9,
        type: 'SIMPLE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/check_key',
      actionMode: 'CHECKKEY',
      actionTag: 'CheckKey',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'CheckKey',
      id: 'check_key',
    },
    {
      codeName: 'create',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      noServiceCodeName: true,
      actionMode: 'CREATE',
      actionTag: 'Create',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Create',
      id: 'create',
    },
    {
      codeName: 'get',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'GET',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'READ',
      actionTag: 'Get',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Get',
      id: 'get',
    },
    {
      codeName: 'get_draft',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'GET',
      requestParamType: 'NONE',
      requestPath: '/get_draft',
      actionMode: 'GETDRAFT',
      actionTag: 'GetDraft',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'GetDraft',
      id: 'get_draft',
    },
    {
      codeName: 'remove',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELDS',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'DELETE',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'DELETE',
      actionTag: 'Remove',
      actionType: 'REMOTE',
      batchActionMode: 1,
      enableBatchAction: true,
      dataSetType: 'REMOTE',
      name: 'Remove',
      id: 'remove',
    },
    {
      codeName: 'save',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/save',
      actionMode: 'SAVE',
      actionTag: 'Save',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Save',
      id: 'save',
    },
    {
      codeName: 'update',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'PUT',
      requestParamType: 'ENTITY',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'UPDATE',
      actionTag: 'Update',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Update',
      id: 'update',
    },
    {
      codeName: 'fetch_all',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_all',
      actionType: 'REMOTE',
      dataSetName: 'all',
      dataSetTag: 'all',
      dataSetType: 'REMOTE',
      id: 'fetch_all',
    },
    {
      codeName: 'fetch_close',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_close',
      actionType: 'REMOTE',
      dataSetName: 'close',
      dataSetTag: 'close',
      dataSetType: 'REMOTE',
      id: 'fetch_close',
    },
    {
      codeName: 'fetch_createman',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_createman',
      actionType: 'REMOTE',
      dataSetName: 'createman',
      dataSetTag: 'createman',
      dataSetType: 'REMOTE',
      id: 'fetch_createman',
    },
    {
      codeName: 'fetch_default',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_default',
      actionType: 'REMOTE',
      dataSetName: 'DEFAULT',
      dataSetTag: 'Default',
      dataSetType: 'REMOTE',
      id: 'fetch_default',
    },
    {
      codeName: 'fetch_index_der',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_index_der',
      actionType: 'REMOTE',
      dataSetName: 'IndexDER',
      dataSetTag: 'IndexDER',
      dataSetType: 'REMOTE',
      id: 'fetch_index_der',
    },
    {
      codeName: 'fetch_not_close',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_not_close',
      actionType: 'REMOTE',
      dataSetName: 'not_close',
      dataSetTag: 'not_close',
      dataSetType: 'REMOTE',
      id: 'fetch_not_close',
    },
    {
      codeName: 'fetch_owner',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'schedule_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'schedule_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_owner',
      actionType: 'REMOTE',
      dataSetName: 'owner',
      dataSetTag: 'owner',
      dataSetType: 'REMOTE',
      id: 'fetch_owner',
    },
    {
      codeName: 'FilterCreate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERCREATE',
      id: 'filtercreate',
    },
    {
      codeName: 'FilterFetch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERFETCH',
      id: 'filterfetch',
    },
    {
      codeName: 'FilterGet',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGET',
      id: 'filterget',
    },
    {
      codeName: 'FilterGetDraft',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGETDRAFT',
      id: 'filtergetdraft',
    },
    {
      codeName: 'FilterRemove',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERREMOVE',
      id: 'filterremove',
    },
    {
      codeName: 'FilterSearch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERSEARCH',
      id: 'filtersearch',
    },
    {
      codeName: 'FilterUpdate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERUPDATE',
      id: 'filterupdate',
    },
  ],
  deopprivs: [
    {
      logicName: '建立',
      name: 'CREATE',
      id: 'create',
    },
    {
      logicName: '删除',
      name: 'DELETE',
      id: 'delete',
    },
    {
      logicName: '读取',
      name: 'READ',
      id: 'read',
    },
    {
      logicName: '更新',
      name: 'UPDATE',
      id: 'update',
    },
  ],
  codeName: 'schedule',
  deapicodeName: 'schedule',
  deapicodeName2: 'schedules',
  deapitag: 'SCHEDULE',
  dataAccCtrlArch: 1,
  dataAccCtrlMode: 1,
  dataTypeAppDEFieldId: 'type',
  enableUIActions: 15,
  indexTypeAppDEFieldId: 'type',
  keyAppDEFieldId: 'id',
  lnlanguageRes: {
    lanResTag: 'DE.LNAME.SCHEDULE',
  },
  logicName: '日程',
  majorAppDEFieldId: 'name',
  quickSearchAppDEFieldIds: ['name'],
  sysAPITag: 'ServiceAPI',
  defaultMode: true,
  enableFilterActions: true,
  major: true,
  name: 'SCHEDULE',
  id: 'crmweb.schedule',
  codeName2: 'schedules',
  requestPaths: [],
};
